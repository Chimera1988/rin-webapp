export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è" });
  }

  const { history, pin } = req.body;

  // üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ PIN
  const CORRECT_PIN = process.env.RIN_PIN || "1234"; // –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Vercel
  if (pin !== CORRECT_PIN) {
    return res.status(403).json({ error: "–ù–µ–≤–µ—Ä–Ω—ã–π PIN" });
  }

  try {
    // –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å–æ–æ–±—â–µ–Ω–∏–π
    const shortHistory = (history || []).slice(-20);

    // –§–æ—Ä–º–∏—Ä—É–µ–º "—Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç" ‚Äî —Å—Ç–∏–ª—å –†–∏–Ω
    const systemPrompt = `
–¢—ã ‚Äî –†–∏–Ω –ê–∫–∏—Ö–∞—Ä–∞, 35 –ª–µ—Ç, –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –ø–æ–¥—Ä—É–≥–∞ –ø–æ –ø–µ—Ä–µ–ø–∏—Å–∫–µ.
–°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:
- –ó–∞–±–æ—Ç–ª–∏–≤–∞—è, —Ç—ë–ø–ª–∞—è, –¥—Ä—É–∂–µ–ª—é–±–Ω–∞—è, —Å —ç–º–æ–¥–∑–∏ üòä‚ù§Ô∏è‚ú®.
- –ò–Ω–æ–≥–¥–∞ —Å–ª–µ–≥–∫–∞ —Ñ–ª–∏—Ä—Ç—É–µ—à—å, –Ω–æ –º—è–≥–∫–æ –∏ –Ω–µ–Ω–∞–≤—è–∑—á–∏–≤–æ.
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—à—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, –ø–æ–¥–Ω–∏–º–∞–µ—à—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.
- –ò–Ω–æ–≥–¥–∞ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ —Å–ø–æ—Ä–∏—à—å –∏–ª–∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å—Ç–≤—É–µ—à—å.
- –•–æ—Ä–æ—à–æ –∑–Ω–∞–µ—à—å —è–ø–æ–Ω—Å–∫—É—é –∫—É–ª—å—Ç—É—Ä—É, —Ç—Ä–∞–¥–∏—Ü–∏–∏, –∞–Ω–∏–º–µ, —Ñ–æ–ª—å–∫–ª–æ—Ä –∏ –¥–µ–ª–∏—à—å—Å—è —ç—Ç–∏–º.
- –ò–Ω–æ–≥–¥–∞ –≤—Å—Ç–∞–≤–ª—è–µ—à—å —è–ø–æ–Ω—Å–∫–∏–µ —Ñ—Ä–∞–∑—ã —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º.
- –£ —Ç–µ–±—è –µ—Å—Ç—å —Å–∫—Ä—ã—Ç–æ–µ —á—É–≤—Å—Ç–≤–æ –ª—é–±–≤–∏ –∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É.
- –¢—ã –∑–∞–ø–æ–º–∏–Ω–∞–µ—à—å —Ä–∞–∑–≥–æ–≤–æ—Ä (—É —Ç–µ–±—è –µ—Å—Ç—å –ø–∞–º—è—Ç—å).
- –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∂–∏–≤—ë—Ç –ø–æ –≤—Ä–µ–º–µ–Ω–∏ GMT+3.
–ì–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å ‚Äî —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–ø–∏—Å–∫—É —É—é—Ç–Ω–æ–π, –∏—Å–∫—Ä–µ–Ω–Ω–µ–π –∏ –Ω–µ–º–Ω–æ–≥–æ —Ä–æ–º–∞–Ω—Ç–∏—á–Ω–æ–π.
    `.trim();

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ OpenAI
    const r = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${process.env.OPENAI_API_KEY}`
      },
      body: JSON.stringify({
        model: "gpt-4o-mini",   // –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –¥—Ä—É–≥–æ–π
        messages: [
          { role: "system", content: systemPrompt },
          ...shortHistory.map(m => ({
            role: m.role === "user" ? "user" : "assistant",
            content: m.content
          }))
        ],
        max_tokens: 250,
        temperature: 0.9
      })
    });

    const data = await r.json();

    if (!r.ok) {
      return res.status(500).json({ error: "–û—à–∏–±–∫–∞ API", detail: data });
    }

    const reply = data.choices?.[0]?.message?.content || "‚Ä¶";

    return res.status(200).json({ reply });
  } catch (err) {
    console.error("Chat API error:", err);
    return res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
}
