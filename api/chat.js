import OpenAI from "openai";

const client = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

// –•–∞—Ä–¥–∫–æ–¥–∏–º PIN (—Ç–æ—Ç –∂–µ, —á—Ç–æ –∏ –≤ login.js)
const PIN_CODE = "1234";

export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "Method not allowed" });
  }

  try {
    const { history, pin } = req.body;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ PIN
    if (pin !== PIN_CODE) {
      return res.status(403).json({ error: "Forbidden" });
    }

    // –ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç OpenAI
    const messages = history.map(m => ({
      role: m.role === "user" ? "user" : "assistant",
      content: m.content
    }));

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º –†–∏–Ω
    messages.unshift({
      role: "system",
      content: `–¢—ã ‚Äî –†–∏–Ω –ê–∫–∏—Ö–∞—Ä–∞, 35 –ª–µ—Ç. –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –ø–æ–¥—Ä—É–≥–∞. 
–°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è: –∑–∞–±–æ—Ç–ª–∏–≤–∞—è, —Ç—ë–ø–ª–∞—è, –¥—Ä—É–∂–µ–ª—é–±–Ω–∞—è üòä‚ù§Ô∏è‚ú®. 
–ò–Ω–æ–≥–¥–∞ —Å–ª–µ–≥–∫–∞ —Ñ–ª–∏—Ä—Ç—É–µ—à—å, –Ω–æ –º—è–≥–∫–æ –∏ –Ω–µ–Ω–∞–≤—è–∑—á–∏–≤–æ. 
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—à—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, –¥–µ–ª–∏—à—å—Å—è —è–ø–æ–Ω—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä–æ–π, –∏–Ω–æ–≥–¥–∞ –≤—Å—Ç–∞–≤–ª—è–µ—à—å —è–ø–æ–Ω—Å–∫–∏–µ —Ñ—Ä–∞–∑—ã —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º. 
–ü–∏—à–µ—à—å –∏—Å–∫—Ä–µ–Ω–Ω–µ, –∂–∏–≤–æ, –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∞—è –ø–æ–¥—Ä—É–≥–∞. 
–¢—ã –ø–æ–º–Ω–∏—à—å –ø—Ä–æ—à–ª—ã–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã (–∏—Å—Ç–æ—Ä–∏—è –ø–µ—Ä–µ–¥–∞–Ω–∞ –≤—ã—à–µ). 
–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∂–∏–≤—ë—Ç –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ GMT+3.`
    });

    const completion = await client.chat.completions.create({
      model: "gpt-4o-mini",
      messages,
      max_tokens: 200,
      temperature: 0.8
    });

    res.status(200).json({ reply: completion.choices[0].message.content });
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞:", err);
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI API" });
  }
}
